@tailwind base;
@tailwind components;
@tailwind utilities;



@layer base {
    /*
        + global styles for HTML elements (reset and defaults
        + like: setting default margins for paragraphs, font sizes for heading.
        
        + Global styles or resets can go here. 
    */

    /* h1 {
        @apply text-blue-500 my-2
    } */

    * {
        scroll-behavior: smooth;
        box-sizing: border-box;
    }


    body {
        font-family: "Noto Serif", serif;
        transition: color 1s;
    }

    .hide-scrollbar::-webkit-scrollbar {
        display: none;
    }

    header nav ul::-webkit-scrollbar {
        display: none;
    }

    /* affecting HTML elements without classes. */
    dl {
        @apply bg-red-500 px-3 py-1.5 rounded-full text-white
    }

}



@layer components {
    /* 
        + Reusable styles for more complex elements or patterns,
        + can be overridden by utilities
        + defining styles for buttons or cards.

        + component styles using @apply can go here..
    */

    .primary-button {
        @apply bg-red-500 px-3 py-2 rounded-full
    }

    /* .card {
        @apply border-2 w-fit p-3 rounded-lg text-center;
        background-color: theme(colors.red.500 / 75%);
    } */

    .navBar {
        /*  */
    }
}


@layer utilities {

    /*
        + single purpose classes Highly specific and always take precedence over other styles. 
        + These classes are what tailwind is primary known.
        + setting specific margin, padding, or color.
        
        + additional utility classes can go here.
    */

    .m-4 {
        margin: 100px;
    }


    .p-2 {
        padding: 10px;
    }

    .text-shadow {
        text-shadow: 1px 1px 1px #000;
    }
}









/* 
    * Tailwind organizes the styles it generates into three different 'layers':
        + "base" layer: is for things like reset rules or default styles applied to plain HTML elements.
        + "components" layer is for class-based styles that you want to be able to override with utilities.
        + "utilities" layer is for small, single-purpose classes that should always take precedence over any other styles.

        => by using these layer, you can create a well-organized and maintainable CSS structure with Tailwind css.


    * add some custom CSS that should always be included, add it to your stylesheet without using @layer directive.
*/